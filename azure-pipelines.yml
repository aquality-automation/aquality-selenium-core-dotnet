trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: test

  jobs:
  - job: sonar
    displayName: Analyse code with SonarQube

    steps:
    - task: SonarCloudPrepare@1
      displayName: 'Prepare SonarCloud analysis'
      inputs:
        SonarCloud: 'SonarCloud'
        organization: 'aqualityautomation'
        projectKey: 'aquality-automation_aquality-selenium-core-dotnet'
        projectName: 'aquality-selenium-core-dotnet'
        projectVersion: '$(Build.BuildNumber)'
        extraProperties: |
          sonar.coverage.exclusions=**/**
    
    - task: DotNetCoreCLI@2
      displayName: 'Build solution'
      inputs:
        command: 'build'
        projects: Aquality.Selenium.Core/Aquality.Selenium.Core.sln
        arguments: -c $(buildConfiguration)

    - task: SonarCloudAnalyze@1
      displayName: 'Run SonarCloud code analysis'
      continueOnError: true

    - task: SonarCloudPublish@1
      displayName: 'Publish SonarCloud quality gate results'

  - job: tests
    displayName: Run tests
    
    variables:
      isRemote: true

    steps:
    - task: Windows Application Driver@0
      displayName: 'Start WinAppDriver'
      inputs:
        OperationType: 'Start'

    - task: DotNetCoreCLI@2
      displayName: 'Run tests'
      inputs:
        command: 'test'
        projects: '**/*Tests*/*.csproj'
        arguments: -c $(buildConfiguration)
        publishTestResults: true

    - task: Windows Application Driver@0
      displayName: 'Stop WinAppDriver'
      inputs:
        OperationType: 'Stop'

- stage: deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - job: release
    displayName: 'Create tag on GitHub and publish NuGet package'

    steps:
    - task: GitVersion@5
      displayName: 'Run GitVersion'
      inputs:
        runtime: 'core'

    - script: dotnet pack Aquality.Selenium.Core\src\Aquality.Selenium.Core\Aquality.Selenium.Core.csproj -c $(buildConfiguration) -p:Version=$(GitVersion.NuGetVersion) -o $(Build.ArtifactStagingDirectory)
      displayName: 'Create NuGet package'

    - task: GitHubRelease@0
      displayName: 'Create tag on GitHub'
      inputs:
        gitHubConnection: 'github.com_aqualityautomation'
        repositoryName: 'aquality-automation/aquality-selenium-core-dotnet'
        action: 'create'
        tag: 'v$(GitVersion.NuGetVersion)'
        tagSource: 'manual'
        isPreRelease: contains(variables['GitVersion.NuGetVersion'], '-')

    - task: NuGetCommand@2
      displayName: 'Push NuGet package'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/Aquality.Selenium.Core*.nupkg;!$(Build.ArtifactStagingDirectory)/**/Aquality.Selenium.Core*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'NuGet'
